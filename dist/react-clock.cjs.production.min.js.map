{"version":3,"file":"react-clock.cjs.production.min.js","sources":["../src/Hand.tsx","../src/Mark.tsx","../src/Clock.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { createUseStyles } from \"react-jss\";\nimport clsx from \"clsx\";\nimport { HandleProps } from \"./HandTypes\";\n\nconst useStyle = createUseStyles({\n  hand: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: \"50%\",\n    right: \"50%\",\n  },\n  body: {\n    position: \"absolute\",\n    backgroundColor: \"black\",\n    transform: \"translateX(-50%)\",\n  },\n});\n\nexport default function Hand({\n  angle = 0,\n  // name,\n  length = 100,\n  oppositeLength = 10,\n  width = 1,\n  classes,\n}: HandleProps) {\n  const handClasses = useStyle();\n  return (\n    <div\n      className={clsx(handClasses.hand, classes?.hand)}\n      style={{\n        transform: `rotate(${angle}deg)`,\n      }}\n    >\n      <div\n        className={clsx(handClasses.body, classes?.body)}\n        style={{\n          width: `${width}px`,\n          top: `${50 - length / 2}%`,\n          bottom: `${50 - oppositeLength / 2}%`,\n        }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { MarkProps } from \"./MarkTypes\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyle = createUseStyles({\n  mark: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: \"50%\",\n    right: \"50%\",\n  },\n  body: {\n    position: \"absolute\",\n    backgroundColor: \"black\",\n    transform: \"translateX(-50%)\",\n  },\n  number: {\n    position: \"absolute\",\n    left: \"-40px\",\n    width: \"80px\",\n    textAlign: \"center\",\n  },\n});\n\nexport default function Mark({\n  angle = 0,\n  length = 10,\n  // name,\n  width = 1,\n  number,\n  classes,\n}: MarkProps) {\n  const markClasses = useStyle();\n  return (\n    <div\n      className={clsx(markClasses.mark, classes?.mark)}\n      style={{\n        transform: `rotate(${angle}deg)`,\n      }}\n    >\n      <div\n        className={clsx(markClasses.body, classes?.body)}\n        style={{\n          width: `${width}px`,\n          top: 0,\n          bottom: `${100 - length / 2}%`,\n        }}\n      />\n      {number && (\n        <div\n          className={markClasses.number}\n          style={{\n            transform: `rotate(-${angle}deg)`,\n            top: `${length / 2}%`,\n          }}\n        >\n          {number}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { getHours, getMinutes, getSeconds } from \"@wojtekmaj/date-utils\";\n\nimport Hand from \"./Hand\";\nimport Mark from \"./Mark\";\n\nimport { createUseStyles } from \"react-jss\";\nimport { ClockProps } from \"./types\";\n\nconst useStyle = createUseStyles({\n  clockRoot: {\n    display: \"block\",\n    position: \"relative\",\n  },\n  face: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: \"rgba(0,0,0,0.3)\",\n    border: \"1px solid black\",\n    borderRadius: \"50%\",\n  },\n  secondHand: {\n    backgroundColor: \"red\",\n  },\n});\n\nexport default function Clock({\n  className,\n  hourHandLength = 50,\n  hourHandOppositeLength,\n  hourHandWidth = 4,\n  hourMarksLength = 10,\n  hourMarksWidth = 3,\n  minuteHandLength = 70,\n  minuteHandOppositeLength,\n  minuteHandWidth = 2,\n  minuteMarksLength = 6,\n  minuteMarksWidth = 1,\n  renderHourMarks = true,\n  renderMinuteHand = true,\n  renderMinuteMarks = true,\n  renderNumbers,\n  renderSecondHand = true,\n  secondHandLength = 90,\n  secondHandOppositeLength,\n  secondHandWidth = 1,\n  size = 150,\n  value,\n}: ClockProps) {\n  const classes = useStyle();\n  function renderMinuteMarksFn() {\n    if (!renderMinuteMarks) {\n      return null;\n    }\n\n    const minuteMarks = [];\n    for (let i = 1; i <= 60; i += 1) {\n      const isHourMark = renderHourMarks && !(i % 5);\n\n      if (!isHourMark) {\n        minuteMarks.push(\n          <Mark\n            key={`minute_${i}`}\n            angle={i * 6}\n            length={minuteMarksLength}\n            name=\"minute\"\n            width={minuteMarksWidth}\n          />\n        );\n      }\n    }\n    return minuteMarks;\n  }\n\n  function renderHourMarksFn() {\n    if (!renderHourMarks) {\n      return null;\n    }\n\n    const hourMarks = [];\n    for (let i = 1; i <= 12; i += 1) {\n      hourMarks.push(\n        <Mark\n          key={`hour_${i}`}\n          angle={i * 30}\n          length={hourMarksLength}\n          name=\"hour\"\n          number={renderNumbers ? i : null}\n          width={hourMarksWidth}\n        />\n      );\n    }\n    return hourMarks;\n  }\n\n  function renderFace() {\n    return (\n      <div className={classes.face}>\n        {renderMinuteMarksFn()}\n        {renderHourMarksFn()}\n      </div>\n    );\n  }\n\n  function renderHourHandFn() {\n    const angle = value\n      ? getHours(value) * 30 + getMinutes(value) / 2 + getSeconds(value) / 600\n      : 0;\n\n    return (\n      <Hand\n        angle={angle}\n        length={hourHandLength}\n        name=\"hour\"\n        oppositeLength={hourHandOppositeLength}\n        width={hourHandWidth}\n      />\n    );\n  }\n\n  function renderMinuteHandFn() {\n    if (!renderMinuteHand) {\n      return null;\n    }\n\n    const angle = value\n      ? getHours(value) * 360 + getMinutes(value) * 6 + getSeconds(value) / 10\n      : 0;\n\n    return (\n      <Hand\n        angle={angle}\n        length={minuteHandLength}\n        name=\"minute\"\n        oppositeLength={minuteHandOppositeLength}\n        width={minuteHandWidth}\n      />\n    );\n  }\n\n  function renderSecondHandFn() {\n    if (!renderSecondHand) {\n      return null;\n    }\n\n    const angle = value ? getMinutes(value) * 360 + getSeconds(value) * 6 : 0;\n\n    return (\n      <Hand\n        angle={angle}\n        length={secondHandLength}\n        name=\"second\"\n        classes={{ body: classes.secondHand }}\n        oppositeLength={secondHandOppositeLength}\n        width={secondHandWidth}\n      />\n    );\n  }\n\n  return (\n    <time\n      className={clsx(classes.clockRoot, className)}\n      dateTime={value instanceof Date ? value.toISOString() : value}\n      style={{\n        width: `${size}px`,\n        height: `${size}px`,\n      }}\n    >\n      {renderFace()}\n      {renderHourHandFn()}\n      {renderMinuteHandFn()}\n      {renderSecondHandFn()}\n    </time>\n  );\n}\n\nClock.displayName = 'Clock';\n"],"names":["useStyle","createUseStyles","hand","position","top","bottom","left","right","body","backgroundColor","transform","Hand","angle","length","oppositeLength","width","classes","handClasses","React","className","clsx","style","mark","number","textAlign","Mark","markClasses","clockRoot","display","face","border","borderRadius","secondHand","Clock","hourHandLength","hourHandOppositeLength","hourHandWidth","hourMarksLength","hourMarksWidth","minuteHandLength","minuteHandOppositeLength","minuteHandWidth","minuteMarksLength","minuteMarksWidth","renderHourMarks","renderMinuteHand","renderMinuteMarks","renderNumbers","renderSecondHand","secondHandLength","secondHandOppositeLength","secondHandWidth","size","value","dateTime","Date","toISOString","height","minuteMarks","i","push","key","name","renderMinuteMarksFn","hourMarks","renderHourMarksFn","getHours","getMinutes","getSeconds","renderMinuteHandFn","renderSecondHandFn","displayName"],"mappings":"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"}